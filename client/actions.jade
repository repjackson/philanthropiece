// template(name='action')
//     .ui.basic.icon.button.toggle_action(class=action_button_class data-tooltip=action_doc.title)
//         +avatar_sprite name=action_doc.icon_class classes='ui mini inline image'


// template(name='thanks_button')
//     if said_thanks
//         .ui.icon.blue.compact.button.vote_up(data-tooltip="Thank #{author.profile.first_name} for Sharing")
//             // img(src="https://png.icons8.com/small/50/000000/pray.png")
//             img(src="https://png.icons8.com/ios/50/000000/pray.png")
//     else
//         .ui.icon.basic.compact.button.vote_up
//             img(src="https://png.icons8.com/ios/50/000000/pray.png")
//             // img(src="https://png.icons8.com/small/50/000000/pray.png")
//     // .ui.icon.basic.mini.compact.button.vote_up(data-tooltip="Thank #{author.profile.first_name} for Sharing")
//         // img.ui.mini.image(src="https://png.icons8.com/pray-filled/ios7/50" width="50" height="50")
//         // if said_thanks
//         //     |Thanks #{author.profile.first_name}
//         // else
//         //     | Thank #{author.profile.first_name} for Sharing
//     // #thanks_modal.ui.small.modal
//     //     i.close.icon
//     //     .header Send #{author.profile.first_name} an optional private message?
//     //     .content
//     //         // img.ui.avatar.image(src="{{c.url author.profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
//     //         .ui.fluid.input
//     //             input#thanks_message_text(type='text')
//     //     .actions
//     //         .ui.cancel.basic.button
//     //             // i.ban.icon
//     //             | No Thanks
//     //         .ui.teal.approve.labeled.icon.button 
//     //             i.send.icon
//     //             |Send
//     // #message_sent.ui.small.modal
//     //     i.close.icon
//     //     .header Message sent to #{author.profile.first_name}.
//     //     .actions
//     //         .ui.green.approve.button 
//     //             i.check.icon
//     //             |Cool


// template(name='respond_button')
//     if currentUser
//         #respond.ui.basic.icon.button(data-tooltip='Respond')
//             +mini_sprite name='response' classes='ui inline image'
//     else
//         .ui.basic.disabled.icon.button(data-tooltip='Respond')
//             +mini_sprite name='response' classes='ui inline image'


// template(name='reflect_button')
//     if currentUser
//         #reflect.ui.basic.icon.button(data-tooltip='Reflect in Journal')
//             +mini_sprite name='mirror' classes='ui mini inline image'
//     else
//         .ui.basic.disabled.icon.button(data-tooltip='Reflect in Journal')
//             +mini_sprite name='mirror' classes='ui mini inline image'

template(name='vote_button')
    .ui.icon.button
        i.thumbs.up.link.icon.vote_up(class=vote_up_button_class)
    .ui.icon.button
        i.thumbs.down.link.icon.vote_down(class=vote_down_button_class)
        |#{points}



template(name='favorite_button')
    .ui.basic.icon.button.favorite_item(class=favorite_item_class)
        +avatar_sprite name='hearts' classes='ui mini inline image'
        if favorite_count
            | #{favorite_count}

// template(name='mark_complete_button')
//     .mark_complete.ui.white.button(class=complete_button_class) 
//         if completed
//             +mini_sprite name='checked-checkbox' classes='ui mini inline image'
//             | Completed
//         else
//             +mini_sprite name='unchecked-checkbox' classes='ui mini inline image'
//             | Mark Complete
        
// template(name='mark_doc_complete_button')
//     .mark_complete.ui.icon.basic.button(class=complete_button_class) 
//         if complete
//             +mini_sprite name='checkmark' classes='ui mini inline image'
//             // | Completed
//         else
//             +mini_sprite name='unchecked-checkbox' classes='ui mini inline image'
//             // | Complete
        
// template(name='mark_doc_approved_button')
//     if approved
//         .unapprove.ui.icon.basic.button(data-tooltip='Unapprove')
//             +ultraviolet_icon40 name='approval' classes='ui mini inline image'
//     else
//         .approve.ui.icon.basic.button(data-tooltip='Approve')
//             +mini_sprite name='approval' classes='ui mini inline image'
         
template(name='bookmark_button')
    .bookmark_button.ui.icon.button(class=bookmark_button_class data-tooltip='Bookmark') 
        i.large.bookmark.icon
        // if bookmarked
        //     | Bookmarked
        // else
        //     | Bookmark
        
        
// template(name='pin_button')
//     .pin_button.ui.icon.button(class=pin_button_class data-tooltip='Pin this') 
//         if pinned
//             +avatar_sprite name="pin" classes='ui mini inline image'
//             // | Pinned
//         else
//             +avatar_sprite name="pin" classes='ui mini inline image'
//             // | Pin
        

// template(name='resonate_button')
//     .resonate_button.ui.icon.button(class=resonate_button_class data-tooltip='This Resonates with Me')
//         // i.red.heartbeat.icon
//         // <img src="https://png.icons8.com/heart-with-pulse/dusk/64" title="Heart with Pulse" width="64" height="64">        
//         img.ui.mini.inline.image(src="https://png.icons8.com/heart-with-pulse/dusk/64" width="64" height="64")
        
        
template(name='notify_button')
    if currentUser
        h3
            i.large.bell.icon
            | notify
    .ui.fluid.input
        +inputAutocomplete settings=recipient_select_settings id="recipient_select" class="" autocomplete="off" placeholder='username'
    .ui.list
        each notified_users
            .item
                img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                .content
                    |#{username}
                .right.floated.content
                    i.remove_notified_user.large.link.red.remove.icon
                
template(name='mark_read_button')
    if currentUser
        if read
            .mark_unread.ui.button(data-tooltip='Mark Unread')
                +mini_sprite name='read-message' classes='avatar'
                |Read
        else
            .mark_read.ui.basic.button(data-tooltip='Mark Read')
                +mini_sprite name='message' classes='ui mini inline image'
                |Unread
    +read_by_list


    
    
                
template(name='read_by_list')
    if read_by.count
        .ui.dividing.header
            |Read by... 
            span.floated.right (#{read_by.count})
        .ui.divided.list
            each read_by
                .item
                    img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
                    .content
                        .header
                            |#{name}
                        .description
                            +tiny_color_dots
                            // each five_tags
                            //     .ui.basic.label #{this}
                
                
                
// template(name='resonates_list')
//     if resonates_with_people.count
//         .ui.segment
//             .ui.dividing.header
//                 |This Resonates With... (#{resonates_with_people.count})
//             .ui.divided.list
//                 each resonates_with_people
//                     .item
//                         img.ui.avatar.image(src="{{c.url profile.image_id width=100 height=100 gravity='face' crop='fill'}}")
//                         .content
//                             .header
//                                 |#{name}
//                             .description
//                                 +tiny_color_dots
//                                 // each five_tags
//                                 //     .ui.basic.label #{this}

                